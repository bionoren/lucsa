//Unit Test Description

//function [name]
//method [name]
//object [code_to_instantiate_object]
//The created object is stored in $obj
//You can insert arbitrary PHP with <?php and ?>, each on their own line

//title, expected printed result, expected returned result[, arg1, ...]
<?php
    $empty_result = unserialize('O:13:"SQLite3Result":0:{}');
?>
object SQLiteManager::getInstance(true);
method query
"Generic Select", ``, $empty_result, `"select 1"`
"Empty Query", ``, false, null

method createTable
"Create Empty", `Error: Cannot create an empty table<br>`, false, "test", array()
"Create No Name", `Error: Cannot create an unamed table<br>`, false, "", `array(new DBField("field1", DBField::STRING), new DBField("field2", DBField::NUM))`
"Create Table", ``, "", test, `array(new DBField("field1", DBField::STRING), new DBField("field2", DBField::NUM))`

method getLastInsertID
"No inserts", ``, ""
<?php
    $obj->query("INSERT INTO test (field1) VALUES ('radfafsfe')");
?>
"Test", ``, 1

method changed
<?php
    $obj->query("UPDATE test SET field1='' WHERE field2=-41");
?>
"test false", ``, false
<?php
    $obj->query("INSERT INTO test (field1) VALUES ('radfafs')");
?>
"test true", ``, true

method createUniqueConstraint
"create", ``, $empty_result, "test", `array(new DBField("field1", DBField::STRING))`
"duplicate", ``, $empty_result, "test", `array(new DBField("field1", DBField::STRING))`
"No table", ``, null, "", `array(new DBField("field1", DBField::STRING))`
"No fields", ``, null, "invalid", `array()`

method insert
"Insert", ``, $empty_result, "test", `array("field1"=>"value1", "field2"=>2)`
"Insert or ignore (not duplicate)", ``, $empty_result, "test", `array("field1"=>"value1", "field2"=>2)`, true
"Insert empty", ``, null, "test", array()
"Empty title", ``, null, "", `array("field1"=>"value1", "field2"=>2)`
"Duplicate Insert", ``, $empty_result, "test", `array("field1"=>"value1", "field2"=>2)`, true

method update
"Update", ``, $empty_result, "test", `array("field2"=>41)`, `array("field1"=>"value1")`
"Empty table", ``, null, "", `array("field2"=>41)`, `array("field1"=>"value1")`
"No update clause", ``, null, "test", `array()`, `array("field1"=>"value1")`
"No where clause", ``, $empty_result, "test", `array("field2"=>41)`, `array()`

method select
"Select All", ``, null, "test"

method __destruct
<?php
    $obj->query("DROP TABLE IF EXISTS test");
    unset($obj);
?>